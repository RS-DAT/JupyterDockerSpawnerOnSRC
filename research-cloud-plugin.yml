- name: Enable ansible to configure workers
  hosts: localhost
  gather_facts: false
  vars: {}
  tasks:

    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 300

    - name: Create group workers with workers' IPs
      add_host:
        name: "{{ item }}"
        groups: workers
        ansible_user: ubuntu
        ansible_connection: ssh
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_become: yes
      loop: '{{ worker_ip_addresses }}'

    - name: Alias name for jumphost
      add_host:
        name: jumphost
        hostname: localhost

    - name: Scan for worker keys.
      shell:
        cmd: ssh-keyscan {{ item }}
      register: ssh_scan
      loop: '{{ worker_ip_addresses }}'

    - name: Write the worker keys to known hosts
      known_hosts:
        name: "{{ item.0.item }}"
        key: "{{ item.1 }}"
      with_subelements:
        - "{{ ssh_scan.results }}"
        - stdout_lines

- name: Install and configure Jupyter DockerSpawner
  hosts: all
  vars: {}
  tasks:

    - name: Common stuff
      include_role:
        name: common

    - name: Install gcc, git, ntp
      apt:
        update_cache: yes
        pkg:
          - git
          - gcc
          - g++
          - make
          - ntp
          - tmux
          - ksh
          - acl
          - net-tools
          - jq
          - npm
          - nodejs
          - python3-pip

    - name: Install configurable http proxy
      npm:
        name: configurable-http-proxy
        global: yes

    - name: Install python packages
      include_role:
        name: python

    - name: Set up Jupyter server
      include_role:
        name: jupyter
      when: inventory_hostname == "jumphost"
